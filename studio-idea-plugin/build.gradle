buildscript {
    repositories {
        maven {
            url 'http://dl.bintray.com/jetbrains/intellij-plugin-service'
        }
    }
}

plugins {
    id "org.jetbrains.intellij" version "0.4.17"
    id "com.palantir.git-version" version "0.12.2"
}

dependencies {
    compile (project(':midpoint-client')) {
        exclude group: "org.slf4j"
        exclude group: "ch.qos.logback"
    }

    compile("com.evolveum.midpoint.model:model-common:$midpointVersion") {
        transitive = false
    }
    compile("com.evolveum.midpoint.model:model-api:$midpointVersion") {
        transitive = false
    }
    compile("com.evolveum.midpoint.repo:security-api:$midpointVersion") {
        transitive = false
    }
    compile("com.evolveum.midpoint.model:notifications-api:$midpointVersion") {
        transitive = false
    }
    compile "com.evolveum.midpoint:midpoint-localization:$midpointVersion"
    compile("com.evolveum.midpoint:midscribe-core:$midpointVersion") {
        exclude group: "org.springframework"
        exclude group: "net.sf.jasperreports"
        exclude group: "xml-resolver"
        exclude group: "xerces"
        exclude group: "xml-apis"
        exclude group: "org.apache.cxf", module: "cxf-rt-wsdl"

        exclude group: "org.slf4j"
        exclude group: "ch.qos.logback"
        // todo fix, this creates class cast issue with Documentbuilder factory
    }

    compile "de.slackspace:openkeepass:$openkeepass"
    compile "org.apache.commons:commons-lang3:$commonsLang"
    compile "org.knowm.xchart:xchart:$xchartVersion"
    compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
}

intellij {
    version '2019.3'    // 'LATEST-EAP-SNAPSHOT'
    type 'IC'
    downloadSources true
    pluginName 'MidPoint Studio'
    updateSinceUntilBuild false
    plugins = [
            'PsiViewer:193-SNAPSHOT',
            'com.jetbrains.hackathon.indices.viewer:1.3',
            'java',
            'Groovy',
            'maven'
    ]
    patchPluginXml {
        sinceBuild '191'
        untilBuild '193.*'
        version project.version + '.' + versionDetails().commitDistance
    }
    publishPlugin {
        channels project.channels
        token System.getenv('studio_intellijPublishToken')
    }
}

buildPlugin.configure {
    doFirst {
        println "Git describe: " + versionDetails().commitDistance
    }
}

runIde {
    jvmArgs "-Didea.log.config.file=$project.projectDir/src/test/resources/log4j.xml"
}