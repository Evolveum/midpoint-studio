buildscript {
    repositories {
        maven {
            url 'http://dl.bintray.com/jetbrains/intellij-plugin-service'
        }
    }
}

plugins {
    id "org.jetbrains.intellij" version "0.5.0"
}

apply from: "$rootDir/$project.name/verifier.gradle"

dependencies {
    compile project(':midpoint-client')

    compile("com.evolveum.midpoint.model:model-common:$midpointVersion") {
        transitive = false
    }
    compile("com.evolveum.midpoint.model:model-api:$midpointVersion") {
        transitive = false
    }
    compile("com.evolveum.midpoint.model:notifications-api:$midpointVersion") {
        transitive = false
    }
    compile "com.evolveum.midpoint:midpoint-localization:$midpointVersion"

    compile "de.slackspace:openkeepass:$openkeepass"
    compile "net.mikehardy:google-analytics-java7:$analyticsVersion"
    compile "org.apache.commons:commons-lang3:$commonsLang"
    compile "org.knowm.xchart:xchart:$xchartVersion"
    compile "com.h2database:h2:$h2Version"
//    compile "org.slf4j:slf4j-log4j12:1.7.25"
//    compile 'com.github.adedayo.intellij.sdk:forms_rt:142.1'
}

if (gitLocalBranch == 'nightly' || gitLocalBranch == 'milestone') {
    publishChannel = gitLocalBranch
} else if (gitLocalBranch == 'stable') {
    publishChannel = 'default'
}

def channelSuffix = ""
if (!publishChannel?.isBlank()) {
    def channel = publishChannel.toLowerCase()
    if (channel == "nightly") {
        channelSuffix = "-" + buildNumber + "-" + channel
    } else if (channel == "milestone") {
        channelSuffix = "-" + buildNumber
    }
}

def fullVersion = "$project.version$channelSuffix"

println "Plugin version: " + fullVersion
println "Publish channel: " + publishChannel

intellij {
    version '2019.3'
    type 'IC'
    downloadSources true
    pluginName 'intellij-midpoint-studio'
    updateSinceUntilBuild false
    plugins = [
            'PsiViewer:193-SNAPSHOT',
            'com.jetbrains.hackathon.indices.viewer:1.3',
            'java',
            'Groovy',
            'maven'
    ]
    patchPluginXml {
        sinceBuild '191'
        untilBuild '193.*'
        version fullVersion
    }
    publishPlugin {
        channels publishChannel
        token System.getenv('studio_intellijPublishToken')
    }
}
runPluginVerifier {
    pluginFileName = "$intellij.pluginName-$version"
    ides = ["IC-2019.3", "IC-2020.1", "IC-2020.2", "IC-LATEST-EAP-SNAPSHOT"]
}
